<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2019-05-04T17:00:26-07:00</updated><id>/</id><title type="html">Keenan Payne</title><entry><title type="html">Defining metrics that help with static site generator evaluation</title><link href="/blog/evaluating-static-site-generators.html" rel="alternate" type="text/html" title="Defining metrics that help with static site generator evaluation" /><published>2018-07-26T00:00:00-07:00</published><updated>2018-07-26T00:00:00-07:00</updated><id>/blog/evaluating-static-site-generators</id><content type="html" xml:base="/blog/evaluating-static-site-generators.html">&lt;p&gt;When choosing a static site generator (SSG) for your next project, how do you decide on which tool to use? What is important to you or your organization? Different individuals or organizations often have drastically different priorities when it comes to choosing software.&lt;/p&gt;

&lt;p&gt;While evaluating software to use, it is important to surface the metrics and considerations that are important to you or your organization. You need to have something by which different pieces of software are evaluated, and defining metrics is an important step in doing that.&lt;/p&gt;

&lt;p&gt;For the past few months at Asana, our web development team has recently been evaluating SSGs with the hope of finding one that will scale with both our growing website and our growing team. As we started evaluating software, it became apparent that each member of our team was using different metrics to do evaluations. Each team member has different things that they believe are important. Having different opinions can be helpful for surfacing metrics that would have otherwise been left out. However, using inconsistent metrics can lead to a lack of shared understanding which can create friction when making a decision.&lt;/p&gt;

&lt;p&gt;When our team first kick-started the evaluation, we were sharing feedback that included all sorts of metrics. We were all prioritizing something different as we did our evaluation. After recognizing that this would never lead to a conclusive answer, we took a step back and had a few discussions around what metrics were important to us when deciding our next SSG. To have a productive evaluation, our team needed to create a shared understanding of the metrics we would measure to compare the different tools. After a few discussions, our metrics list looked like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Architecture (extensibility, language(s), framework(s))&lt;/li&gt;
  &lt;li&gt;Developer velocity (set-up and hot reloading times)&lt;/li&gt;
  &lt;li&gt;Project build time (compiling static pages and assets)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also had “considerations” that are important points to note but are harder to quantify:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Recruitment efforts around our tech stack&lt;/li&gt;
  &lt;li&gt;Long-term viability&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With these metrics in mind we restarted our evaluation efforts with the hopes of finding an SSG to suit our website and our development needs. We could have saved time by defining these metrics ahead of time, then proceeding with the evaluation. Yet I am still grateful that I was able to learn something from the experience, and I hope it is useful for you.&lt;/p&gt;

&lt;p&gt;What metrics have you used when evaluating a static site generator? Do you have any other advice for your fellow developers hoping to choose a piece of software?&lt;/p&gt;</content><author><name></name></author><summary type="html">When choosing a static site generator (SSG) for your next project, how do you decide on which tool to use? What is important to you or your organization? Different individuals or organizations often have drastically different priorities when it comes to choosing software.</summary></entry><entry><title type="html">Allow elements to hang outside of their fixed-width parents without scrollbars</title><link href="/blog/elements-hang-outside-parents-without-scrollbars.html" rel="alternate" type="text/html" title="Allow elements to hang outside of their fixed-width parents without scrollbars" /><published>2018-02-22T00:00:00-08:00</published><updated>2018-02-22T00:00:00-08:00</updated><id>/blog/elements-hang-outside-parents-without-scrollbars</id><content type="html" xml:base="/blog/elements-hang-outside-parents-without-scrollbars.html">&lt;p&gt;I was recently working on a landing page at Asana that was designed by &lt;a href=&quot;http://jacoviello.com/&quot;&gt;Devin Jacoviello&lt;/a&gt;, one of our talented communication designers at Asana. The page was beautiful and seemed to be a relatively straight-forward project. As we discussed developing the page during our design hand-off, there was one area that did not seem straight-forward in its implementation.&lt;/p&gt;

&lt;p&gt;The area that confused me was the component that we call the “masthead.” This component lives at the top of the page and contains our page title, subtitle, and a CTA. Additionally, the masthead component for this specific landing page has floating elements that surround the content and provide some visual elegance.&lt;/p&gt;

&lt;p&gt;Because this landing page is not live, let’s say the design looks something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://luna1.co/28a6e5.png&quot; alt=&quot;landing page design&quot; title=&quot;Landing page design&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As Devin and I walked through the implementation details, he described the interaction for the masthead component. He explained that at sub-1920 pixel viewports the floating elements would be positioned off-screen surrounding the content. If the screen grew larger, the elements would remain at their location, but more of the element would be visible to the user.&lt;/p&gt;

&lt;p&gt;When described to me, this seemed like a pretty straight-forward interaction. I had never built something like this before, but I wouldn’t imagine it being very hard to accomplish.&lt;/p&gt;

&lt;p&gt;If that were the case, I wouldn’t be writing this blog post.&lt;/p&gt;

&lt;h2 id=&quot;solution-1&quot;&gt;Solution 1&lt;/h2&gt;

&lt;p&gt;During my first pass at implementing the design, I built a layout with a fixed-width container that contains many child elements that are absolutely positioned to achieve the desired effect.&lt;/p&gt;

&lt;p&gt;
  &lt;p data-height=&quot;500&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;a4d4d78c334a82834eec8a23d1aa94a3&quot; data-default-tab=&quot;result&quot; data-user=&quot;keenanpayne&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Allow elements to hang outside of a fixed-width container [Attempt 1]&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/keenanpayne/pen/a4d4d78c334a82834eec8a23d1aa94a3/&quot;&gt;Allow elements to hang outside of a fixed-width container [Attempt 1]&lt;/a&gt; by Keenan Payne (&lt;a href=&quot;https://codepen.io/keenanpayne&quot;&gt;@keenanpayne&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
  &lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;p&gt;This solution achieves the desired effect, with one caveat: we have horizontal overflow because of our off-screen content.&lt;/p&gt;

&lt;h2 id=&quot;solution-2&quot;&gt;Solution 2&lt;/h2&gt;

&lt;p&gt;Naturally, if we want to remove the horizontal overflow for our off-screen content, we can apply &lt;code class=&quot;highlighter-rouge&quot;&gt;overflow-x: hidden;&lt;/code&gt; to our container and see if that solves our problem.&lt;/p&gt;

&lt;p&gt;
  &lt;p data-height=&quot;500&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;f61d113cfe2f39438c845b32e3e90c73&quot; data-default-tab=&quot;result&quot; data-user=&quot;keenanpayne&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Allow elements to hang outside of a fixed-width container [Solution 2]&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/keenanpayne/pen/f61d113cfe2f39438c845b32e3e90c73/&quot;&gt;Allow elements to hang outside of a fixed-width container [Solution 2]&lt;/a&gt; by Keenan Payne (&lt;a href=&quot;https://codepen.io/keenanpayne&quot;&gt;@keenanpayne&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;This solution works well on sub-1920 pixel viewports, but when you have a larger viewport, we get the following issue:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://luna1.co/c55db2.png&quot; alt=&quot;landing page design&quot; title=&quot;Landing page design&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Because we’re removing all horizontal overflow from our container, when you have a viewport larger than 1920 pixels, the remaining parts of our floating elements are cut off.&lt;/p&gt;

&lt;h2 id=&quot;solution-3&quot;&gt;Solution 3&lt;/h2&gt;

&lt;p&gt;We need a solution that allows our floating elements to be positioned off-screen on sub-1920 pixel viewports without any horizontal overflow, and on viewports larger than 1920 pixels the entire floating elements are visible.&lt;/p&gt;

&lt;p&gt;To achieve this, we are going to add an additional container to our layout.&lt;/p&gt;

&lt;p&gt;
  &lt;p data-height=&quot;600&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;321f001ab7cfd3ba9b696192cba6614c&quot; data-default-tab=&quot;result&quot; data-user=&quot;keenanpayne&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Allow elements to hang outside of a fixed-width container&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/keenanpayne/pen/321f001ab7cfd3ba9b696192cba6614c/&quot;&gt;Allow elements to hang outside of a fixed-width container&lt;/a&gt; by Keenan Payne (&lt;a href=&quot;https://codepen.io/keenanpayne&quot;&gt;@keenanpayne&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Reduce the zoom of your browser window if you have a monitor smaller than 1920 pixels and wish to see the effect.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, when our user visits this page on a 1920 pixel monitor, they will see all of the floating content, similar to the image at the beginning of this post.&lt;/p&gt;

&lt;p&gt;Why does this work? It’s because we shift the logic to ensure that horizontal overflow is not visible. We place &lt;code class=&quot;highlighter-rouge&quot;&gt;overflow-x: hidden;&lt;/code&gt; on our outer-most container, and in our inner container, we nest all of our absolutely positioned floating elements. Because we are not hiding the overflow in our inner container, the elements that are nested inside of it will display on larger viewports but will not overflow on smaller viewports thanks to our outer container. It’s a pretty simple trick and only requires one extra element to work properly.&lt;/p&gt;

&lt;h2 id=&quot;shouts-out&quot;&gt;Shouts Out&lt;/h2&gt;

&lt;p&gt;Quick shout out to Chris Silich that wrote a &lt;a href=&quot;https://chrissilich.com/blog/make-elements-hang-outside-your-main-page-container-without-triggering-scrollbars-if-the-window-is-too-narrow/&quot;&gt;blog post&lt;/a&gt; about this a few years ago. This post was one of the only resources I found documenting this solution, and I thought it would be valuable to write about it again since his original post contains broken images and no working examples.&lt;/p&gt;</content><author><name></name></author><summary type="html">I was recently working on a landing page at Asana that was designed by Devin Jacoviello, one of our talented communication designers at Asana. The page was beautiful and seemed to be a relatively straight-forward project. As we discussed developing the page during our design hand-off, there was one area that did not seem straight-forward in its implementation.</summary></entry><entry><title type="html">Just another “hello, world” introduction</title><link href="/blog/introduction.html" rel="alternate" type="text/html" title="Just another &quot;hello, world&quot; introduction" /><published>2017-12-22T00:00:00-08:00</published><updated>2017-12-22T00:00:00-08:00</updated><id>/blog/introduction</id><content type="html" xml:base="/blog/introduction.html">&lt;p&gt;Hello, my name is Keenan Payne, which you probably already discerned if you’re reading this post. If you haven’t, greetings it’s nice to meet you. 👋🏻&lt;/p&gt;

&lt;p&gt;I’m starting this blog with the intention of sharing any helpful knowledge that I have as it pertains to coding &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. I’ve always found writing to be a helpful exercise in both teaching and learning. By spending time writing, I get to share my thoughts and ideas with you on a given subject, but I also get to spend time re-evaluating my thoughts and ideas. This cycle of re-evaluation helps me think of things that I might otherwise have missed initially. It also gives me the space to think of alternatives and ensure that I’m providing you, the reader, my best thoughts at any given time on a subject.&lt;/p&gt;

&lt;h3 id=&quot;topics-of-conversation&quot;&gt;Topics of Conversation&lt;/h3&gt;

&lt;p&gt;What exactly will I be talking about? Well, by profession I’m a front-end developer so I’ll be sharing plenty of thoughts on HTML, CSS, and JavaScript. This might manifest itself in the form of in-depth tutorials, quick tips, helpful hacks, analysis, and more.&lt;/p&gt;

&lt;p&gt;I’m lucky enough to work on different projects on a daily basis, always solving challenges that arise. If it takes me more than an hour to solve a single problem, then it’s deserving of a blog post. Additionally, my solutions are almost guaranteed to be sub-optimal, which is why I have a comments box for each post. I would love nothing more than to engage in civil discourse with other developers in an effort to hear new opinions and learn how other developers might solve a given problem.&lt;/p&gt;

&lt;p&gt;Outside of my daily work, I’m also sporadically involved in different open source projects. These include tools for developers (i.e., &lt;a href=&quot;http://concisecss.com/&quot;&gt;Concise&lt;/a&gt;), or what I believe to be useful websites (coming soon - 😮). These projects grant me the opportunity to work with new technologies, and to take a stab at making the life of my fellow developers easier.&lt;/p&gt;

&lt;p class=&quot;-large&quot;&gt;
  As I start to work on new projects, I think that this blog would be a perfect outlet for outlining the work that I'm doing, how I'm doing it, and why.
&lt;/p&gt;

&lt;p&gt;I’m looking forward to getting the chance to write more and share what I can with you. I hope you follow along with this blog and share your thoughts as you find appropriate.&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Maybe I’ll branch out in the future&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Hello, my name is Keenan Payne, which you probably already discerned if you’re reading this post. If you haven’t, greetings it’s nice to meet you. 👋🏻</summary></entry></feed>